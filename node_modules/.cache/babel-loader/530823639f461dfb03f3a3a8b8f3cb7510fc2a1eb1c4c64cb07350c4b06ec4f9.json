{"ast":null,"code":"import{createContext,useContext,useState}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";const ThemeContext=/*#__PURE__*/createContext();export const ThemeProvider=_ref=>{let{children}=_ref;const[theme,setTheme]=useState(\"light\");const toggleTheme=()=>{setTheme(prevTheme=>prevTheme===\"light\"?\"dark\":\"light\");};return/*#__PURE__*/_jsx(ThemeContext.Provider,{value:{theme,toggleTheme},children:children});};export const useTheme=()=>{return useContext(ThemeContext);};","map":{"version":3,"names":["createContext","useContext","useState","jsx","_jsx","ThemeContext","ThemeProvider","_ref","children","theme","setTheme","toggleTheme","prevTheme","Provider","value","useTheme"],"sources":["/Users/akhil/Desktop/projects/portfolio/portfolio-react/src/components/ThemeContext.js"],"sourcesContent":["import { createContext, useContext, useState } from \"react\";\n\nconst ThemeContext = createContext();\n\nexport const ThemeProvider = ({ children }) => {\n  const [theme, setTheme] = useState(\"light\");\n\n  const toggleTheme = () => {\n    setTheme((prevTheme) => (prevTheme === \"light\" ? \"dark\" : \"light\"));\n  };\n\n  return (\n    <ThemeContext.Provider value={{ theme, toggleTheme }}>\n      {children}\n    </ThemeContext.Provider>\n  );\n};\n\nexport const useTheme = () => {\n  return useContext(ThemeContext);\n};\n"],"mappings":"AAAA,OAASA,aAAa,CAAEC,UAAU,CAAEC,QAAQ,KAAQ,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAE5D,KAAM,CAAAC,YAAY,cAAGL,aAAa,CAAC,CAAC,CAEpC,MAAO,MAAM,CAAAM,aAAa,CAAGC,IAAA,EAAkB,IAAjB,CAAEC,QAAS,CAAC,CAAAD,IAAA,CACxC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGR,QAAQ,CAAC,OAAO,CAAC,CAE3C,KAAM,CAAAS,WAAW,CAAGA,CAAA,GAAM,CACxBD,QAAQ,CAAEE,SAAS,EAAMA,SAAS,GAAK,OAAO,CAAG,MAAM,CAAG,OAAQ,CAAC,CACrE,CAAC,CAED,mBACER,IAAA,CAACC,YAAY,CAACQ,QAAQ,EAACC,KAAK,CAAE,CAAEL,KAAK,CAAEE,WAAY,CAAE,CAAAH,QAAA,CAClDA,QAAQ,CACY,CAAC,CAE5B,CAAC,CAED,MAAO,MAAM,CAAAO,QAAQ,CAAGA,CAAA,GAAM,CAC5B,MAAO,CAAAd,UAAU,CAACI,YAAY,CAAC,CACjC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}